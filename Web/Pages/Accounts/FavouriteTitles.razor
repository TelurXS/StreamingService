@attribute [Route(WebRoutes.My.Profile.Favourites)]
@layout ProfileLayout

@using Domain.Entities

@inject IIdentityService IdentityService

<RequireAuthorization />

@if (Loaded is false)
{
	<div class="sm-page-container">
		<Loading />
	</div>
	<LargeMargin />
	return;
}

<h2 class="mb-3">Favourites</h2>

<div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5">
	@foreach (var title in Titles)
	{
		<div class="col d-flex justify-content-center mt-2">
			<ResponsiveTitleCard Title="title" />
		</div>
	}
</div>

@code {
	private List<Title> Titles { get; set; } = new();

	private bool Loaded { get; set; } = false;

	protected override async Task OnInitializedAsync()
	{
		var favouriteTitlesResult = await IdentityService.GetFavouriteTitlesAsync();

		if (favouriteTitlesResult.IsFound)
		{
			Titles = favouriteTitlesResult.AsFound;
		}

		Loaded = true;
		StateHasChanged();
	}
}