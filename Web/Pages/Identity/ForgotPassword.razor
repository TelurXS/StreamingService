@attribute [Route(WebRoutes.ForgotPassword)]
@layout MinimalisticLayout

@using Domain.Entities

@inject IIdentityService IdentityService
@inject NavigationManager NavigationManager

<Background />

<div class="gradient-panel card-form form-shadow-primary p-4">

	<h2 class="mb-2">Forgot Password</h2>

	@if (Success is false)
	{
		<span class="mt-2">Reset Code will be send to your email</span>

		<InputText @bind-Value="Email" class="mt-3 input font-gray" />

		<button @onclick="() => OnSubmit()" class="mt-3 button">Submit</button>
	}

	@if (Success)
	{
		<span class="mt-2">Reset Code sent to your email</span>

		<a @onclick="() => OnClick()" class=" mt-3 button font-white">Continue</a>
	}

	@if (Error)
	{
		<span class="mt-2">Something went wrong...</span>
	}
</div>

@code {

	[SupplyParameterFromQuery]
	public string? ReturnUrl { get; set; } = default;

	private string Email { get; set; } = default!;

	private bool Success { get; set; } = false;
	private bool Error { get; set; } = false;

	private async Task OnSubmit()
	{
		if (string.IsNullOrEmpty(Email))
			return;

		Success = false;
		Error = false;

		var sentResult = await IdentityService.ForgotPassword(Email);

		if (sentResult.IsUpdated)
		{
			Success = true;
		}
		else
		{
			Error = true;
		}

		StateHasChanged();
	}

	private void OnClick()
	{
		if (ReturnUrl is not null)
			NavigationManager.NavigateTo(ReturnUrl);

		NavigationManager.NavigateTo(WebRoutes.Home);
	}
}