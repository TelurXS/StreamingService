@attribute [Route(WebRoutes.NewAndPopular)]

@using Domain.Entities
@using Domain.Models.Results.Unions

@inject ITitleService TitleService;

<PageTitle>New & Popular</PageTitle>

@if (Loaded is false)
{
	<div class="sm-page-container">
		<Loading />
	</div>
	<LargeMargin />
}

<div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5">
	@foreach (var title in Recomendations)
	{
		<div class="col d-flex justify-content-center mt-3">
			<ResponsiveTitleCard Title="title" />
		</div>
	}
</div>

<div class="mt-3">
	<Pagination Url="@WebRoutes.NewAndPopular"
		Refresh="Refresh" 	
		TotalCount="TotalCount" 
		TotalPages="TotalPages"
		DefaultCount="40" />
</div>

@code {

	public List<Title> Recomendations { get; set; } = new();

	public int TotalCount { get; set; } = 0;

	public int TotalPages { get; set; } = 0;

	private bool Loaded { get; set; } = false;

	private async Task Refresh(int page, int count)
	{
		Loaded = false;
		StateHasChanged();

		var recomendationsResult = await TitleService.FindAllPopularAsync(count, page);

		if (recomendationsResult.IsFound)
		{
			Recomendations = recomendationsResult.AsFound;
		}

		TotalCount = await TitleService.CountAsync();

		TotalPages = TotalCount / (count);

		Loaded = true;
		StateHasChanged();
	}
}