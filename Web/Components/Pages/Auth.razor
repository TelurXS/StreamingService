@page "/auth"

@using Microsoft.AspNetCore.Authorization
@using System.Net

@inject IHttpClientFactory HttpClientFactory

<PageTitle>Auth</PageTitle>

<h1>You are authenticated</h1>

@if (Message is not null)
{
    <div>@Message</div>
}

<AuthorizeView>
    <Authorized>
        Hello @context.User.Identity?.Name!
    </Authorized>
    <NotAuthorized>
        Not Authorized
    </NotAuthorized>
</AuthorizeView>

@code {
    private string? Message { get; set; } = "Test";

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateTask;

        Message = "Before Auth";

        //if (state.User.Identity?.IsAuthenticated is false)
        //    return;

        Message = "Before Api";

        var client = HttpClientFactory.CreateClient("api");

        var request = new HttpRequestMessage(HttpMethod.Get, "/identity");

        var response = await client.SendAsync(request);

        Message = $"{response.StatusCode}: {await response.Content.ReadAsStringAsync()}";
    }
}
