@page "/login"
@using Microsoft.AspNetCore.Authentication.BearerToken
@using System.Net.Http.Headers
@using System.Security.Claims
@using Web.Handlers

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject ApiAuthenticationStateProvider AuthenticationStateProvider

<h3>Login</h3>

<div>@HttpContext.User.Identity?.Name</div>

@if (Message is not null)
{
    <div>@Message</div>
}

<EditForm Model="Input" OnValidSubmit="OnValidSubmit" FormName="login">
    <InputText @bind-Value="Input.Email"></InputText>
    <InputText @bind-Value="Input.Password"></InputText>
    <button type="submit">Sign In</button>
</EditForm>

@code {

    private string? Message { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmit()
    {
        var request = new LoginRequest
            {
                Email = Input.Email,
                Password = Input.Password,
            };

        var result = await AuthenticationStateProvider.LoginAsync(request);

        if (result is true)
            Message = "Success";
        
        else Message = "Failed";

        if (ReturnUrl is not null)
            NavigationManager.NavigateTo(ReturnUrl);
        
        else NavigationManager.NavigateToCurrentPage();
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }

    private sealed class ClaimResponse 
    {
        public string Type { get; set; } = string.Empty;

        public string Value { get; set; } = string.Empty;
    }
}
