@using Domain.Entities

@inject IIdentityService IdentityService

<ModalWindow @ref="Window">
	@*
	<div class="row g-3 align-items-center justify-content-center" @onclick="() => {}">
		<div class="card card-form back-dark border-primary rounded-corners p-4 form-shadow-primary">
			<div class="card-body">
				<h4>Save to List</h4>

				@foreach (var list in TitlesLists)
				{
					<div>@list.Name</div>
				}

			</div>
		</div>
	</div>
	*@

	<div class="gradient-panel card-form">

		<div class="d-flex flex-column align-items-center">
			<img class="w-25" src="/img/bookmark.svg"/>
			<span class="font-xl mb-1">Save</span>
		</div>

		<div class="gradient-divider"></div>

		<div class="overflow-auto" style="height: 300px;">
			@foreach (var list in TitlesLists)
			{
				<div class="gradient-panel my-2">
					<div class="row mw-100">

						<div class="col-2">
							@if (list.Titles.Count > 0)
							{
								<img src="@list.Titles.First().Image.Uri" height="70" />
							}
						</div>

						<div class="col-6 d-flex flex-column justify-content-center">
							<span>@list.Name</span>
							<span>@list.Availability.ToString()</span>
						</div>

						<div class="col-4 d-flex align-items-center">
							<button class="button my-auto">Save</button>
						</div>
					</div>
				</div>
			}
		</div>

		<div class="gradient-divider"></div>

		<a class="mx-3 my-2 d-flex align-items-center">
			<div class="button button-fit mx-2">
				<img src="/img/plus-fill.svg" />	
			</div>
			<span>Create List</span>
		</a>
	</div>

</ModalWindow>

@code {

	[Parameter]
	public Title Title { get; set; } = default!;

	private ModalWindow Window { get; set; } = default!;

	private List<TitlesList> TitlesLists { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		var titlesListsResult = await IdentityService.GetTitlesListsAsync();

		if (titlesListsResult.IsFound)
		{
			TitlesLists = titlesListsResult.AsFound;
		}
	}

	public void Open() => Window.Open();

	public void Close() => Window.Close();
}