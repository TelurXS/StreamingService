@using Domain.Entities

@inject IIdentityService IdentityService

<ModalWindow @ref="Window" CloseOnBackgroundClick="false"> 
	<div class="gradient-panel card-form p-4" @onclick:stopPropagation="true">
		<h2>Session</h2>
		<span class="mt-3">Join Session as @(User?.Name ?? ANONYMOUS)</span>
		<button class="button mt-3" @onclick="() => OnJoinClick()">Join</button>
		<a href="@WebRoutes.Home" class="button-glass mt-3 font-white">Cancel</a>
	</div>
</ModalWindow>

@code {

	[Parameter]
	public Func<Task> OnJoin { get; set; } = default!;

	private User? User { get; set; } = default;

	private ModalWindow Window { get; set; } = default!;

	private const string ANONYMOUS = "Anonymous";

	protected override async Task OnInitializedAsync()
	{
		var userResult = await IdentityService.GetProfileAsync();

		if (userResult.IsFound)
		{
			User = userResult.AsFound;
			StateHasChanged();
		}
	}

	private void OnJoinClick()
	{
		OnJoin?.Invoke();
		Close();
	}

	public void Open() => Window.Open();

	public void Close() => Window.Close();
}
